---
import type { Paths } from '@interfaces/page';

// Remove current url path and remove trailing slash if exists
const currentUrlPath = Astro.url.pathname.replace(/\/+$/, "");

// Get url array from path
// eg: /tags/tailwindcss => ['tags', 'tailwindcss']
const breadcrumbList = currentUrlPath.split("/").slice(1);

// if breadcrumb is Home > Posts > 1 <etc>
// replace Posts with Posts (page number)
breadcrumbList[0] === "posts" &&
  breadcrumbList.splice(0, 2, `Posts (page ${breadcrumbList[1] || 1})`);
interface Props {
  paths?: Paths[]
}
const { paths } = Astro.props
// console.log('paths', paths)

const breadcrumbRootPath = paths?.slice(0, breadcrumbList.length - 1).map(breadcrumb => breadcrumb.slug).join("/");
---


<nav class="breadcrumb" aria-label="breadcrumb">
  <ul>
    <li>
      <a href="/">Home</a>
      <span aria-hidden="true">/</span>
    </li>
    <>
    {
      paths?.map((breadcrumb, index) =>
        index + 1 === breadcrumbList.length ? (
          <li>
            <span
              class={`capitalize`}
              aria-current="page"
            >
              {breadcrumb.name}
            </span>
          </li>
        ) : (
        <li>
            <a href={index !== 0 ? `/${breadcrumbRootPath}` : `/${breadcrumb.slug}`}>
              {breadcrumb.name}
            </a>
            <span aria-hidden="true">/</span>
          </li>
        )
      )
    }
    
    </>

  </ul>
</nav>

<style>
  .breadcrumb {
    @apply mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-3;
  }
  .breadcrumb ul li {
    @apply inline;
  }
  .breadcrumb ul li a {
    @apply capitalize opacity-70;
  }
  .breadcrumb ul li span {
    @apply opacity-70;
  }
  .breadcrumb ul li:not(:last-child) a {
    @apply hover:opacity-100;
  }
</style>
