---
export const prerender = true;
import Layout from "../../../layouts/Layout.astro";
import { type, uid, url, v } from "../../../utils/const";
import { getPaths } from "../../../utils/function";
// import ListProductW0 from "../../../components/ListProductW0.astro";
import ListProductW1 from "../../../components/ListProductW1.astro";
import PaginationStore from "../../../components/PaginationStore.astro";
import type { Product } from "@interfaces/product";
import type { Category } from "@interfaces/category";
import type { Page } from "@interfaces/pagination";

const params = Astro.params

const category: Category = await fetch(
	`${url}/api/${v}/${type}/query/categories/category/${params.id}`
).then((response) => response.json());


export async function getStaticPaths({paginate}:any) {
  function eliminarDuplicados(array:string[]) {
    return [...new Set(array)];
  }
  
  const products: Product[] = await fetch(
	`${url}/api/${v}/${type}/query/products/product/siteId?id=${uid}`
).then((response) => response.json());

  const ids = products.map(data => (data.parentId))
  const idss = eliminarDuplicados(ids)
  // console.log('idss', idss)
  return idss.map((id) => {
    const filteredProducts = products.filter((post) => post.parentId === id);
    return paginate(filteredProducts, {
      params: { id },
      pageSize: 8
    });
  });
}
const { page } = Astro.props;
---
<Layout
	title={category.data.name}
	description={category.data.description}
  ogImage={category.data.thumbnailUrl}
>
<!-- <ListProductW0 page={category} products={page.data}/> -->
<ListProductW1 page={category} products={page.data}/>
<PaginationStore page={page} />

</Layout>
