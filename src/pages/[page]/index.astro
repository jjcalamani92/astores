---
export const prerender = true;

import Layout from "../../layouts/Layout.astro";
import { url, v, uid, type } from "../../utils/const";
import type { Page } from "../../interfaces/page";
import type { Category } from "../../interfaces/category";
// import ListCategoryW0 from "../../components/ListCategoryW0.astro";
import ListCategoryP0 from "@components/ListCategoryP0.astro";
import type { Site } from "@interfaces/site";
import ListArticlesP0 from "@components/ListArticlesP0.astro";
import ListCategoryW0 from "@components/ListCategoryW0.astro";
import ListProductF0 from "@components/ListProductF0.astro";

export async function getStaticPaths() {
	function eliminarDuplicados(array: string[]) {
		return [...new Set(array)];
	}

	const pages: Page[] = await fetch(
		`${url}/api/${v}/${type}/query/pages/page/siteId?id=${uid}`
	).then((response) => response.json());

	const ids = pages.map((data) => data._id);
	const idss = eliminarDuplicados(ids);

	const categories: Category[] = await fetch(
		`${url}/api/${v}/${type}/query/categories/0/category/siteId?id=${uid}`
	).then((response) => response.json());

	return idss.map((id) => {
		const filteredCategories = categories.filter(
			(category) => category.parentId === id
		);
		return pages.map((page) => ({
			params: { page: page.slug },
			props: { page, categories: filteredCategories },
		}));
	});
}
const { page, categories } = Astro.props;

// const site: Site = await fetch(
// 	`${url}/api/${v}/${type}/query/sites/${uid}`
// ).then((response) => response.json());
// const page: Page = await fetch(
// 	`${url}/api/${v}/${type}/query/pages/page/${uid}/${params.page}`
// ).then((response) => response.json());
if (!page) return Astro.redirect("/404");
// const categories: Category[] = await fetch(
// 	`${url}/api/${v}/${type}/query/categories/0/category/parentId?id=${page._id!}`
// ).then((response) => response.json());
// const articles = await fetch(
// 	`${url}/api/${v}/${type}/query/articles/article/parentId?id=${page._id!}`
// ).then((response) => response.json());
---

<Layout
	title={page.data.name}
	description={page.data.description}
	ogImage={page.data.thumbnailUrl}
>
	<main>
		{
			type.includes("portfolio") && (
				<ListCategoryP0 page={page} categories={categories} />
			)
		}
		{type.includes("furniture") && <ListProductF0 />}
		{
			type.includes("wear") && (
				<ListCategoryW0 page={page} categories={categories} />
			)
		}
	</main>
</Layout>
