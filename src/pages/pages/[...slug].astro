---
import CategoriesLayout from "../../layouts/CategoriesLayout.astro";
import type { Page } from "../../interfaces/page";
import { url, v, uid, type } from "../../utils/const";
import { Category } from "../../interfaces/category";

// const params = Astro.params
// console.log('params', params)
export const prerender = true;

export async function getStaticPaths() {

  function concatenarElementos(arrOrStr: string | string[]): string {
  let arr: string[];

  if (typeof arrOrStr === "string") {
    return arrOrStr;
  } else {
    arr = arrOrStr;
  }

  if (arr.length === 0) {
    return "";
  }

  let resultado = arr.join("/");

  return resultado;
}

  let pages: Page[] = await fetch(
		`${url}/api/${v}/${type}/query/pages/page/siteId?id=${uid}`
	).then((response) => response.json());
  
  let categories0: Category[] = await fetch(
		`${url}/api/${v}/${type}/query/categories/0/category/siteId?id=${uid}`
	).then((response) => response.json());

  let categories1: Category[] = await fetch(
		`${url}/api/${v}/${type}/query/categories/1/category/siteId?id=${uid}`
	).then((response) => response.json());
  
  let categories2: Category[] = await fetch(
		`${url}/api/${v}/${type}/query/categories/2/category/siteId?id=${uid}`
	).then((response) => response.json());
  

  const paths = [...pages, ...categories0, ...categories1, ...categories2]
  return paths.filter((page) => page.data.type !== 'product' ).map((page) => {

    return {
      params: { slug: concatenarElementos(page.data.params.path) },
      props: { page },
    };
  });
}

const { page } = Astro.props;
// console.log('page', page)
---
<CategoriesLayout title={page.data.name}>
  <h1>{page.data.description}</h1>
</CategoriesLayout>