---
import Layout from "../../../layouts/Layout.astro";
import { type, uid, url, v } from "../../../utils/const";
import { getPaths } from "../../../utils/function";
import ListProductW from "../../../components/ListProductW.astro";
import PaginationStore from "../../../components/PaginationStore.astro";
import type { Product } from "@interfaces/product";
import type { Category } from "@interfaces/category";
import type { Page } from "@interfaces/pagination";
export const prerender = true;

const params = Astro.params

const category: Category = await fetch(
	`${url}/api/${v}/${type}/query/categories/category/649e33fe19934955f146cdad`
).then((response) => response.json());



export async function getStaticPaths({paginate}:any) {
  const products: Product[] = await fetch(
	`${url}/api/${v}/${type}/query/products/product/siteId?id=${uid}`
).then((response) => response.json());
  
  return products.map(({parentId}) => {
    const filteredProducts = products.filter((post) => post.parentId === parentId);
    return paginate(filteredProducts, {
      params: { id: parentId },
      pageSize: 8
    });
  });
  // Generate pages from our array of astronauts, with 2 to a page
  // return paginate(products, { params: {} pageSize: 2 });
}
// All paginated data is passed on the "page" prop
const { page } = Astro.props;
// console.log('page', page)
---
<Layout
	title={category.data.name}
	description={category.data.description}
  ogImage={category.data.thumbnailUrl}
>
<ListProductW page={category} products={page.data}/>
<PaginationStore page={page} />
<!-- 
<h1>Page {page.currentPage}</h1>
<ul>
  {page.data.map((data) => <li>{data._id}</li>)}
</ul>

{page.url.prev ? <a href={page.url.prev}>Previous</a> : null}
{page.url.next ? <a href={page.url.next}>Next</a> : null} -->
</Layout>
