---
export const prerender = true;

import Layout from "../../../../layouts/Layout.astro";
import { url, v, uid, type } from "../../../../utils/const";
import { getPaths } from "../../../../utils/function";
import type { Category } from "../../../../interfaces/category";
import ListCategoryW0 from "../../../../components/ListCategoryW0.astro";
import type { Site } from "@interfaces/site";
import ListCategoryP0 from "@components/ListCategoryP0.astro";

export async function getStaticPaths() {
	function eliminarDuplicados(array: string[]) {
		return [...new Set(array)];
	}

	const categories1: Category[] = await fetch(
		`${url}/api/${v}/${type}/query/categories/1/category/siteId?id=${uid}`
	).then((response) => response.json());

	const ids = categories1.map((data) => data._id);
	const idss = eliminarDuplicados(ids);

	const categories2: Category[] = await fetch(
		`${url}/api/${v}/${type}/query/categories/2/category/siteId?id=${uid}`
	).then((response) => response.json());

	function getCategories (id: string) {
		return categories2.filter(
			(category) => category.parentId === id
		);
	}
	return categories1.map((category1) => ({
		params: {
			page: category1.data.params.path[0],
			category0: category1.data.params.path[1],
			category1: category1.data.params.path[2],
		},
		props: { category: category1, categories: getCategories(category1._id) },
	}));
}
const { category, categories } = Astro.props;

if (!category) return Astro.redirect("/404");

// console.log('products2', products2)
---

<Layout
	title={category.data.name}
	description={category.data.description}
	ogImage={category.data.thumbnailUrl}
>
	<main>
		{
			type.includes("portfolio") && (
				<ListCategoryP0 page={category} categories={categories} />
			)
		}
		{
			type.includes('wear') && 
			<ListCategoryW0 page={category} categories={categories} />
		}
	</main>
</Layout>
